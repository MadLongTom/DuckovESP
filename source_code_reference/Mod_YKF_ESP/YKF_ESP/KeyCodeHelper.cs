using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using UnityEngine;

namespace YKF_ESP
{
	// Token: 0x02000011 RID: 17
	[NullableContext(1)]
	[Nullable(0)]
	public static class KeyCodeHelper
	{
		// Token: 0x06000096 RID: 150 RVA: 0x000052E8 File Offset: 0x000034E8
		public static bool TryParseKeyCode(string keyString, out KeyCode keyCode)
		{
			keyCode = KeyCode.None;
			if (string.IsNullOrEmpty(keyString))
			{
				return false;
			}
			string text = keyString.ToUpper().Trim();
			return KeyCodeHelper.keyMapping.TryGetValue(text, out keyCode) || Enum.TryParse<KeyCode>(text, true, out keyCode);
		}

		// Token: 0x06000097 RID: 151 RVA: 0x0000532C File Offset: 0x0000352C
		public static bool IsValidKey(string keyString)
		{
			KeyCode keyCode;
			return KeyCodeHelper.TryParseKeyCode(keyString, out keyCode);
		}

		// Token: 0x06000098 RID: 152 RVA: 0x00005341 File Offset: 0x00003541
		public static string GetKeyDescription(string keyString)
		{
			if (KeyCodeHelper.IsValidKey(keyString))
			{
				return "按键 '" + keyString + "' 配置正确";
			}
			return "按键 '" + keyString + "' 配置错误，将使用默认按键 F1";
		}

		// Token: 0x04000052 RID: 82
		private static readonly Dictionary<string, KeyCode> keyMapping = new Dictionary<string, KeyCode>
		{
			{
				"A",
				KeyCode.A
			},
			{
				"B",
				KeyCode.B
			},
			{
				"C",
				KeyCode.C
			},
			{
				"D",
				KeyCode.D
			},
			{
				"E",
				KeyCode.E
			},
			{
				"F",
				KeyCode.F
			},
			{
				"G",
				KeyCode.G
			},
			{
				"H",
				KeyCode.H
			},
			{
				"I",
				KeyCode.I
			},
			{
				"J",
				KeyCode.J
			},
			{
				"K",
				KeyCode.K
			},
			{
				"L",
				KeyCode.L
			},
			{
				"M",
				KeyCode.M
			},
			{
				"N",
				KeyCode.N
			},
			{
				"O",
				KeyCode.O
			},
			{
				"P",
				KeyCode.P
			},
			{
				"Q",
				KeyCode.Q
			},
			{
				"R",
				KeyCode.R
			},
			{
				"S",
				KeyCode.S
			},
			{
				"T",
				KeyCode.T
			},
			{
				"U",
				KeyCode.U
			},
			{
				"V",
				KeyCode.V
			},
			{
				"W",
				KeyCode.W
			},
			{
				"X",
				KeyCode.X
			},
			{
				"Y",
				KeyCode.Y
			},
			{
				"Z",
				KeyCode.Z
			},
			{
				"0",
				KeyCode.Alpha0
			},
			{
				"1",
				KeyCode.Alpha1
			},
			{
				"2",
				KeyCode.Alpha2
			},
			{
				"3",
				KeyCode.Alpha3
			},
			{
				"4",
				KeyCode.Alpha4
			},
			{
				"5",
				KeyCode.Alpha5
			},
			{
				"6",
				KeyCode.Alpha6
			},
			{
				"7",
				KeyCode.Alpha7
			},
			{
				"8",
				KeyCode.Alpha8
			},
			{
				"9",
				KeyCode.Alpha9
			},
			{
				"F1",
				KeyCode.F1
			},
			{
				"F2",
				KeyCode.F2
			},
			{
				"F3",
				KeyCode.F3
			},
			{
				"F4",
				KeyCode.F4
			},
			{
				"F5",
				KeyCode.F5
			},
			{
				"F6",
				KeyCode.F6
			},
			{
				"F7",
				KeyCode.F7
			},
			{
				"F8",
				KeyCode.F8
			},
			{
				"F9",
				KeyCode.F9
			},
			{
				"F10",
				KeyCode.F10
			},
			{
				"F11",
				KeyCode.F11
			},
			{
				"F12",
				KeyCode.F12
			},
			{
				"TAB",
				KeyCode.Tab
			},
			{
				"ENTER",
				KeyCode.Return
			},
			{
				"SPACE",
				KeyCode.Space
			},
			{
				"SHIFT",
				KeyCode.LeftShift
			},
			{
				"CTRL",
				KeyCode.LeftControl
			},
			{
				"ALT",
				KeyCode.LeftAlt
			},
			{
				"ESC",
				KeyCode.Escape
			},
			{
				"DELETE",
				KeyCode.Delete
			},
			{
				"BACKSPACE",
				KeyCode.Backspace
			},
			{
				"INSERT",
				KeyCode.Insert
			},
			{
				"HOME",
				KeyCode.Home
			},
			{
				"END",
				KeyCode.End
			},
			{
				"PAGEUP",
				KeyCode.PageUp
			},
			{
				"PAGEDOWN",
				KeyCode.PageDown
			},
			{
				"UP",
				KeyCode.UpArrow
			},
			{
				"DOWN",
				KeyCode.DownArrow
			},
			{
				"LEFT",
				KeyCode.LeftArrow
			},
			{
				"RIGHT",
				KeyCode.RightArrow
			},
			{
				"NUMPAD0",
				KeyCode.Keypad0
			},
			{
				"NUMPAD1",
				KeyCode.Keypad1
			},
			{
				"NUMPAD2",
				KeyCode.Keypad2
			},
			{
				"NUMPAD3",
				KeyCode.Keypad3
			},
			{
				"NUMPAD4",
				KeyCode.Keypad4
			},
			{
				"NUMPAD5",
				KeyCode.Keypad5
			},
			{
				"NUMPAD6",
				KeyCode.Keypad6
			},
			{
				"NUMPAD7",
				KeyCode.Keypad7
			},
			{
				"NUMPAD8",
				KeyCode.Keypad8
			},
			{
				"NUMPAD9",
				KeyCode.Keypad9
			},
			{
				"MINUS",
				KeyCode.Minus
			},
			{
				"EQUALS",
				KeyCode.Equals
			},
			{
				"SEMICOLON",
				KeyCode.Semicolon
			},
			{
				"QUOTE",
				KeyCode.Quote
			},
			{
				"COMMA",
				KeyCode.Comma
			},
			{
				"PERIOD",
				KeyCode.Period
			},
			{
				"SLASH",
				KeyCode.Slash
			},
			{
				"BACKSLASH",
				KeyCode.Backslash
			},
			{
				"LEFTBRACKET",
				KeyCode.LeftBracket
			},
			{
				"RIGHTBRACKET",
				KeyCode.RightBracket
			}
		};
	}
}
